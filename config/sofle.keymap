/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE        &kp N1  &kp N2    &kp N3    &kp N4      &kp N5                                     &kp NUMBER_6  &kp N7         &kp N8             &kp N9            &kp NUMBER_0   &kp MINUS
&kp TAB           &kp Q   &kp W     &kp E     &kp R       &kp T                                      &kp Y         &kp U          &kp I              &kp O             &kp P          &kp LEFT_BRACKET
&kp LSHIFT        &kp A   &kp S     &kp D     &kp F       &kp G                                      &kp H         &kp J          &kp K              &kp L             &kp SEMICOLON  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X     &kp C     &kp V       &kp B        &soft_off      &none          &kp N         &kp M          &kp COMMA          &kp DOT           &kp FSLH       &kp RSHFT
                          &kp LGUI  &kp LALT  &kp DELETE  &lt 1 ENTER  &kp LC(TAB)    &kp RIGHT_ALT  &lt 2 SPACE   &kp BACKSPACE  &kp RIGHT_CONTROL  &kp GREATER_THAN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp ESCAPE        &kp F1         &kp F2        &kp F3         &kp F4      &kp F5                                       &kp F6                 &kp F7         &kp F8        &kp F9        &kp F10           &kp F11
&kp TAB           &kp NUHS       &kp NUBS      &kp LS(NUBS)   &kp LS(N8)  &kp LS(N9)                                   &kp RIGHT_BRACKET      &kp N7         &kp N8        &kp N9        &kp LS(N6)        &kp F12
&kp LEFT_SHIFT    &kp RA(NUBS)   &kp LS(N2)    &kp LS(NUHS)   &kp RA(N7)  &kp RA(N0)                                   &kp SLASH              &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6  &kp LS(NUMBER_0)  &kp LS(N5)
&kp LEFT_CONTROL  &kp RA(MINUS)  &kp LS(N1)    &kp LS(MINUS)  &kp RA(N8)  &kp RA(N9)  &trans         &trans            &kp LS(RIGHT_BRACKET)  &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp LS(N4)        &trans
                                 &kp LEFT_GUI  &kp LEFT_ALT   &kp DELETE  &to 1       &kp LS(TAB)    &kp LS(NUMBER_7)  &none                  &kp BACKSPACE  &kp NUMBER_0  &kp COMMA
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &kp F6     &kp F7          &kp F8            &kp F9  &kp F10  &kp F11
&trans      &none         &kp HOME      &kp UP        &kp END       &trans                                      &kp PG_UP  &trans          &none             &trans  &none    &kp F12
&trans      &kp LC(Y)     &kp LEFT      &kp DOWN      &kp RIGHT     &kp LC(Z)                                   &kp PG_DN  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none   &none    &none
&trans      &none         &kp K_CUT     &kp LC(C)     &kp LC(V)     &trans        &trans         &trans         &trans     &trans          &trans            &trans  &trans   &trans
                          &kp LEFT_WIN  &kp LEFT_ALT  &kp DELETE    &kp LC(S)     &kp LS(TAB)    &kp BACKSPACE  &to 2      &kp BACKSPACE   &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
